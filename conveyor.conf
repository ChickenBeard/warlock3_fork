// This is a hashbang include. You can run the command after the #! to see what
// configuration is being extracted from the Gradle build using the Conveyor plugin.
include "#!./gradlew -q printConveyorConfig"

// This enables native library extraction, which improves app startup time and robustness.
// It's optional but a good idea to have it. You can remove this if you get tired of specifying
// system properties for Java libraries with native components.
//
// See https://hydraulic.dev/blog/11-in-jar-signing.html for more.
include required("https://raw.githubusercontent.com/hydraulic-software/conveyor/master/configs/jvm/extract-native-libraries.conf")

gradle-cache = ${env.HOME}/.gradle

// Config file documentation: https://conveyor.hydraulic.dev/latest/configs
app {
  // Set this when build system changes without a software change
  revision = 0

  vcs-url = "https://github.com/sproctor/warlock3"
  // The base URL is where the download site will be placed. Packages will check here for updates.
  site {
    github {
      // Token looks like "github_pat_SOME_TOKEN_VALUE"
      oauth-token = ${env.GITHUB_TOKEN}

      // Optional: upload the download site to a branch.
      pages-branch = "gh-pages"
    }

    extra-header-html = """
      <script>
        if (navigator.userAgent.match(/Android/i)) {
          window.location.replace("https://play.google.com/store/apps/details?id=warlockfe.warlock3")
        }
      </script>
    """
  }

  display-name = "Warlock"
  fsname = warlock

  contact-email = "sproctor@gmail.com"

  # Import all the obfuscated JARs, except the JAR that contains the platform native graphics code.
  inputs = [{
    from = desktopApp/build/compose/tmp/main-release/proguard
    remap = [
      "**"
      "-skiko-awt-runtime-*.jar"
    ]
  }]

  # Put the dropped JAR back with the right version for each platform.
  windows.amd64.inputs = ${app.inputs} [
    ${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-windows-x64/0.7.97/70e5ac402b2f402458dcc6f5ac6fc058157201fd/skiko-awt-runtime-windows-x64-0.7.97.jar
  ]
  mac.amd64.inputs = ${app.inputs} [
    ${gradle-cache}caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-macos-x64/0.7.97/fc1bda4a577e8947aed7235bbb42d264c8eff80b/skiko-awt-runtime-macos-x64-0.7.97.jar
  ]
  mac.aarch64.inputs = ${app.inputs} [
    caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-macos-arm64/0.7.97/4e21507ab052cffb4e247ca3d3523ebd1a332ef6/skiko-awt-runtime-macos-arm64-0.7.97.jar
  ]
  linux.amd64.inputs = ${app.inputs} [
    ${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-linux-x64/0.7.97/3b8183bdd687fb06121305fcfb340398fa3331b6/skiko-awt-runtime-linux-x64-0.7.97.jar
  ]

  // Use the Compose logo as an icon and include it so we can pass it to the Window constructor.
  icons = app/src/main/resources/images/icon.png
  windows.inputs += TASK/rendered-icons/windows
  linux.inputs += TASK/rendered-icons/linux
  macos.inputs += TASK/rendered-icons/macos

  // Check for and apply updates synchronously on every app launch instead of in the background.
  // Consider removing this line for your own app!
  updates = aggressive

  license = GPL-3.0-only
}

conveyor.compatibility-level = 13
