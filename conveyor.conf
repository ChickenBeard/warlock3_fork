// This is a hashbang include. You can run the command after the #! to see what
// configuration is being extracted from the Gradle build using the Conveyor plugin.
include "#!./gradlew -q printConveyorConfig"

skiko-cache = ${env.HOME}/.gradle/caches/modules-2/files-2.1/org.jetbrains.skiko

// Config file documentation: https://conveyor.hydraulic.dev/latest/configs
app {
  // Set this when build system changes without a software change
  revision = 0

  vcs-url = "https://github.com/sproctor/warlock3"
  // The base URL is where the download site will be placed. Packages will check here for updates.
  site {
    github {
      oauth-token = ${env.WARLOCK_GITHUB_TOKEN}
      pages-branch = "gh-pages"
    }

    // TODO: Re-enable when Android version is released
    //    extra-header-html = """
    //      <script>
    //        if (navigator.userAgent.match(/Android/i)) {
    //          window.location.replace("https://play.google.com/store/apps/details?id=warlockfe.warlock3")
    //        }
    //      </script>
    //    """
  }

  display-name = "Warlock"
  fsname = warlock
  long-fsname = warlock

  contact-email = "sproctor@gmail.com"

  # Import all the JARs, except the JAR that contains the platform native graphics code.
  inputs = [{
    from = app/build/compose/tmp/main-release/proguard
    remap = [
      "**"
      "-skiko-awt-runtime-*.jar"
    ]
  }]

  jvm.modules += jdk.accessibility

  machines = [mac, windows.amd64, linux.amd64.glibc, linux.aarch64.glibc]

  # Put the dropped JAR back with the right version for each platform.
  # ./gradlew printConveyorConfig | grep skiko-awt-runtime
  windows.amd64.inputs = ${app.inputs} [
    ${skiko-cache}/skiko-awt-runtime-windows-x64/0.9.18/b742af6d65b0c0a83c6b6f946de54cdcbd7bee0a/skiko-awt-runtime-windows-x64-0.9.18.jar
  ]
  mac.amd64.inputs = ${app.inputs} [
    ${skiko-cache}/skiko-awt-runtime-macos-x64/0.9.18/245a1272f41916595972b8f09119a9c304f3cf44/skiko-awt-runtime-macos-x64-0.9.18.jar
  ]
  mac.aarch64.inputs = ${app.inputs} [
    ${skiko-cache}/skiko-awt-runtime-macos-arm64/0.9.18/2c05e7f20fd52479fd3de082da5239ea4df911c1/skiko-awt-runtime-macos-arm64-0.9.18.jar
  ]
  linux.amd64.inputs = ${app.inputs} [
    ${skiko-cache}/skiko-awt-runtime-linux-x64/0.9.18/e5daf29ff6066bba0c4b9bee83c178ac1854360f/skiko-awt-runtime-linux-x64-0.9.18.jar
  ]
  linux.aarch64.inputs = ${app.inputs} [
    ${skiko-cache}/skiko-awt-runtime-linux-arm64/0.9.18/55e93ad18316fbc982e6b493e9b40d7bff4772bd/skiko-awt-runtime-linux-arm64-0.9.18.jar
  ]

  icons = [icons/icon.png, icons/icon-256.png, icons/icon-512.png]

  updates = manual

  license = Apache-2.0

  windows {
    certificate = ${env.HOME}/Certificates/cert.pfx
    signing-key = ${env.HOME}/Certificates/cert.pfx
//    signing-key {
//      azure-trusted-signing {
//        endpoint = "eus.codesigning.azure.net"  // Your Azure Trusted Signing endpoint region
//      }
//    }
//    signing-key-alias = "sproctor/signing"  // account/profile format
  }

  mac {
    deltas = 2
    certificate = ${env.HOME}/Certificates/warlock_apple.cer
    notarization {
      team-id = "DBNJ4AR55X"
      app-specific-password = ${env.WARLOCK_APPLE_PASSWORD}
      apple-id = "sproctor@gmail.com"
    }
  }
}

conveyor.compatibility-level = 19
